version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hotel_reservation
    image: springboot-hotel-reservation
    ports:
      - "8080:8080"

    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgredb:5432/hotel_reservation
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: test
    depends_on:
      - postgredb
      - rabbitmq
      - redis
    networks:
      - spring-app-network

  postgredb:
    image: postgres
    restart: always
    ports:
      - "5439:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: hotel_reservation
      PGDATA: /var/lib/postgresql/data

    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - spring-app-network

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4:6.20
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - spring-app-network

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitMq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring-app-network

  redis:
    image: redis:7.0.11
    ports:
      - "6379:6379"
    networks:
      - spring-app-network

volumes:
  db-data:
  pgadmin-data:

networks:
  spring-app-network:
    driver: bridge